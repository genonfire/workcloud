name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  tests:

    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
        db: [postgres]
        include:
          - db: postgres
            db_port: 5432

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: wc
          POSTGRES_PASSWORD: wc
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      env:
        DB: ${{ matrix.db }}
        DB_HOST: localhost
        DB_PORT: ${{ matrix.db_port }}
        DB_PASSWORD: wc
      run: |
        tox

    - name: Upload coverage
      if: success() && github.ref == 'refs/heads/master'
      run: codecov

    - name: setup Node
      working-directiory: frontend/wc
      uses: actions/setup-node@v3
      with:
        node-version: 16.13.x
        cache: npm

    - name: install packages
      working-directiory: frontend/wc
      run: npm install

    - name: lint
      working-directiory: frontend/wc
      run: npm run lint

    - name: build
      working-directiory: frontend/wc
      run: npm run build
